var documenterSearchIndex = {"docs":
[{"location":"#LiteQTL.jl-Documentation-1","page":"Home","title":"LiteQTL.jl Documentation","text":"","category":"section"},{"location":"#Package-information-1","page":"Home","title":"Package information","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"LiteQTL is a package that runs whole genome QTL scans near real-time, utilizing the computation power of GPU. ","category":"page"},{"location":"#Features-1","page":"Home","title":"Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Near real time computation for whole genome scan using Linear Model\nGenome scan with covairates\nCPU parallelization and GPU acceleration\nInput data can be of different precision (Float32, or Float64)","category":"page"},{"location":"#Input-and-Output-1","page":"Home","title":"Input and Output","text":"","category":"section"},{"location":"#Input-(all-with-no-missing-data)-1","page":"Home","title":"Input (all with no missing data)","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Genotype probability \nPhenotype\nCovariates (Optional)","category":"page"},{"location":"#Output-1","page":"Home","title":"Output","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Default) Maximum LOD (Log of Odds) score, and the index of the maximum\nLOD (Log of Odds) matrix","category":"page"},{"location":"#Example-1","page":"Home","title":"Example","text":"","category":"section"},{"location":"#Auxilary-Github-repo-1","page":"Home","title":"Auxilary Github repo","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#List-of-functions-1","page":"Home","title":"List of functions","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Modules = [LiteQTL]","category":"page"},{"location":"#LiteQTL.get_pheno_data-Tuple{Any,Any}","page":"Home","title":"LiteQTL.get_pheno_data","text":"get_pheno_data(file, datatype; transposed=true)\n\nreturns the phenotype data. If transposed=true, then the data will be transposed. \n\n\n\n\n\n","category":"method"}]
}
